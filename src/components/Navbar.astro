---
const navItems = [
  { id: 'bio' },
  { id: 'projects' },
  { id: 'experience' },
  { id: 'education' },
];
---

<nav class="nav">
  <a href="/" data-home-link title="Home">
    <i data-feather="home" stroke-width="2.5"></i>
  </a>
  <div class="nav-divider"></div>
  <a href="/blog" title="Blog">
    <i data-feather="edit-3" stroke-width="2.5"></i>
  </a>
  <a href="/photos" title="Photos">
    <i data-feather="camera" stroke-width="2.5"></i>
  </a>
  <a href="https://github.com/AmoghJambekar" target="_blank" rel="noopener noreferrer" title="GitHub">
    <i data-feather="github" stroke-width="2.5"></i>
  </a>
  <a href="https://linkedin.com/in/amoghjambekar" target="_blank" rel="noopener noreferrer" title="LinkedIn">
    <i data-feather="linkedin" stroke-width="2.5"></i>
  </a>
  <a href="/resume.pdf" target="_blank" title="Resume">
    <i data-feather="file-text" stroke-width="2.5"></i>
  </a>
  <div class="nav-divider"></div>
  <button class="theme-toggle" id="theme-toggle" title="Toggle theme">
    <i data-feather="moon" id="theme-icon" stroke-width="2.5"></i>
  </button>
</nav>

<style>
  :root {
    --text-primary: #111827;
    --text-secondary: #4B5563;
    --bg-primary: #FFFFFF;
    --bg-secondary: #F3F4F6;
    --border-color: #E5E7EB;
    --nav-bg: rgba(255, 255, 255, 0.8);
  }

  html.dark {
    --text-primary: #F9FAFB;
    --text-secondary: #D1D5DB;
    --bg-primary: #111827;
    --bg-secondary: #1F2937;
    --border-color: #374151;
    --nav-bg: rgba(17, 24, 39, 0.8);
  }

  .nav {
    position: fixed;
    bottom: 24px;
    left: 50%;
    transform: translateX(-50%);
    background: var(--nav-bg);
    backdrop-filter: blur(12px);
    padding: 8px 16px;
    border-radius: 9999px;
    display: flex;
    align-items: center;
    gap: 12px;
    z-index: 1000;
    border: 1px solid var(--border-color);
    transition: background-color 0.3s ease, border-color 0.3s ease;
  }

  .nav-divider {
    width: 1px;
    height: 16px;
    background: var(--border-color);
    transition: background-color 0.3s ease;
  }
  
  .nav a {
    color: var(--text-primary);
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.2s ease;
    padding: 8px;
    border-radius: 8px;
  }

  html.dark .nav a[href="#"] {
    color: #FFA500;
    text-shadow: 0 0 10px rgba(255, 165, 0, 0.7);
  }

  html.dark .nav a[href="#"] svg {
    filter: drop-shadow(0 0 4px rgba(255, 165, 0, 0.7));
  }

  html.dark .nav a[href*="github"] {
    color: #FFD700;
    text-shadow: 0 0 10px rgba(255, 215, 0, 0.7);
  }

  html.dark .nav a[href*="github"] svg {
    filter: drop-shadow(0 0 4px rgba(255, 215, 0, 0.7));
  }

  html.dark .nav a[href*="linkedin"] {
    color: #0077B5;
    text-shadow: 0 0 10px rgba(0, 119, 181, 0.7);
  }

  html.dark .nav a[href*="linkedin"] svg {
    filter: drop-shadow(0 0 4px rgba(0, 119, 181, 0.7));
  }

  html.dark .nav a[href="/blog"] {
    color: #FF0000;
    text-shadow: 0 0 10px rgba(255, 0, 0, 0.7);
  }

  html.dark .nav a[href="/blog"] svg {
    filter: drop-shadow(0 0 4px rgba(255, 0, 0, 0.7));
  }

  html.dark .nav a[href="/photos"] {
    color: #00FF00;
    text-shadow: 0 0 10px rgba(0, 255, 0, 0.7);
  }

  html.dark .nav a[href="/photos"] svg {
    filter: drop-shadow(0 0 4px rgba(0, 255, 0, 0.7));
  }

  html.dark .nav a[href*="resume"] {
    color: #9333EA;
    text-shadow: 0 0 10px rgba(147, 51, 234, 0.7);
  }

  html.dark .nav a[href*="resume"] svg {
    filter: drop-shadow(0 0 4px rgba(147, 51, 234, 0.7));
  }

  html.dark .theme-toggle {
    color: #FFFFFF;
    text-shadow: 0 0 10px rgba(255, 255, 255, 0.7);
  }

  html.dark .theme-toggle svg {
    filter: drop-shadow(0 0 4px rgba(255, 255, 255, 0.7));
  }

  .nav a svg {
    width: 22px;
    height: 22px;
    stroke: currentColor;
    stroke-width: 2;
  }
  
  .nav a:hover {
    transform: scale(1.15);
  }

  .nav a:hover ~ a {
    transform: translateX(6px);
  }
  
  .theme-toggle {
    color: var(--text-primary);
    background: none;
    border: none;
    padding: 8px;
    border-radius: 8px;
    cursor: pointer;
    transition: all 0.2s ease;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .theme-toggle svg {
    width: 22px;
    height: 22px;
    stroke: currentColor;
    stroke-width: 2;
  }

  .theme-toggle:hover {
    transform: scale(1.15);
  }

  @media (max-width: 768px) {
    .nav {
      padding: 8px 16px;
      gap: 10px;
    }

    .nav a svg,
    .theme-toggle svg {
      width: 20px;
      height: 20px;
    }

    .nav-divider {
      height: 14px;
    }
  }
</style>

<script>
  // Theme toggle functionality
  const initTheme = () => {
    const themeToggle = document.getElementById('theme-toggle');
    const themeIcon = document.getElementById('theme-icon');
    const html = document.documentElement;

    // Get theme from localStorage or system preference
    const getTheme = () => {
      const savedTheme = typeof localStorage !== 'undefined' ? localStorage.getItem('theme') : null;
      if (savedTheme === 'dark' || savedTheme === 'light') {
        return savedTheme;
      }
      return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
    };

    // Set theme and update icon
    const setTheme = (theme: string) => {
      html.classList.remove('light', 'dark');
      html.classList.add(theme);
      localStorage.setItem('theme', theme);
      
      if (themeIcon) {
        themeIcon.setAttribute('data-feather', theme === 'dark' ? 'sun' : 'moon');
        // @ts-ignore
        feather?.replace();
      }
    };

    // Initialize theme
    setTheme(getTheme());

    // Toggle theme on button click
    themeToggle?.addEventListener('click', () => {
      const isDark = html.classList.contains('dark');
      setTheme(isDark ? 'light' : 'dark');
    });

    // Listen for system theme changes
    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {
      if (!localStorage.getItem('theme')) {
        setTheme(e.matches ? 'dark' : 'light');
      }
    });
  };

  // Initialize theme on page load and after view transitions
  document.addEventListener('astro:page-load', initTheme);
</script>
