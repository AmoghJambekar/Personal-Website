import { getCollection } from 'astro:content';
import Navbar from '../../components/Navbar.astro';

// Generate static paths for all photo albums
export async function getStaticPaths() {
  const albums = await getCollection('photos');
  return albums.map(album => ({
    params: { slug: album.slug },
    props: { album },
  }));
}

// Get the current album data
const { album } = Astro.props;
const { Content } = await album.render();

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content={album.data.description} />
    <title>{album.data.title} | Photos | Amogh Jambekar</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <script src="https://unpkg.com/feather-icons/dist/feather.min.js"></script>
  </head>
  <body class="bg-white dark:bg-gray-900">
    <Navbar />
    
    <main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
      <!-- Back Button -->
      <a href="/photos" class="inline-flex items-center text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white mb-8">
        <i data-feather="arrow-left" class="w-4 h-4 mr-2"></i>
        Back to Albums
      </a>

      <!-- Album Header -->
      <header class="mb-12">
        <h1 class="text-4xl font-bold text-gray-900 dark:text-white mb-4">
          {album.data.title}
        </h1>
        <time class="text-gray-600 dark:text-gray-400 mb-4 block">
          {new Date(album.data.date).toLocaleDateString('en-US', {
            year: 'numeric',
            month: 'long',
            day: 'numeric'
          })}
        </time>
        <p class="text-lg text-gray-600 dark:text-gray-400">
          {album.data.description}
        </p>
      </header>

      <!-- Photo Grid -->
      <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
        {album.data.images.map(image => (
          <figure class="relative group">
            <img
              src={image.url}
              alt={image.caption || album.data.title}
              class="w-full h-auto rounded-lg shadow-md transition duration-300 ease-in-out transform hover:scale-[1.02]"
              loading="lazy"
            />
            {image.caption && (
              <figcaption class="mt-2 text-sm text-gray-600 dark:text-gray-400">
                {image.caption}
              </figcaption>
            )}
          </figure>
        ))}
      </div>

      <!-- Additional Content -->
      <div class="prose dark:prose-invert max-w-none mt-12">
        <Content />
      </div>
    </main>

    <style>
      /* Base styles */
      :root {
        --text-primary: #111827;
        --text-secondary: #4B5563;
        --bg-primary: #FFFFFF;
        --bg-secondary: #F3F4F6;
        --border-color: #E5E7EB;
      }

      .dark {
        --text-primary: #F9FAFB;
        --text-secondary: #D1D5DB;
        --bg-primary: #111827;
        --bg-secondary: #1F2937;
        --border-color: #374151;
      }

      body {
        font-family: 'Inter', sans-serif;
        color: var(--text-primary);
        background: var(--bg-primary);
      }

      /* Transitions */
      .transition {
        transition-property: all;
        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        transition-duration: 300ms;
      }

      /* Image hover effects */
      figure img {
        transition: transform 0.3s ease;
      }

      figure:hover img {
        transform: scale(1.02);
      }

      /* Typography */
      .prose {
        max-width: 65ch;
        color: var(--text-secondary);
      }

      .prose h1,
      .prose h2,
      .prose h3 {
        color: var(--text-primary);
      }

      /* Responsive adjustments */
      @media (max-width: 768px) {
        .grid {
          gap: 1rem;
        }

        h1 {
          font-size: 2rem;
        }
      }
    </style>

    <script>
      // Initialize Feather icons
      document.addEventListener('DOMContentLoaded', () => {
        feather?.replace();
      });

      // Image lazy loading
      document.addEventListener('DOMContentLoaded', () => {
        const images = document.querySelectorAll('img[loading="lazy"]');
        if ('loading' in HTMLImageElement.prototype) {
          images.forEach(img => {
            img.loading = 'lazy';
          });
        } else {
          // Fallback for browsers that don't support lazy loading
          const script = document.createElement('script');
          script.src = 'https://cdnjs.cloudflare.com/ajax/libs/lazysizes/5.3.2/lazysizes.min.js';
          document.body.appendChild(script);
        }
      });
    </script>
  </body>
</html> 